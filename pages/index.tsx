import { useState, useEffect, useCallback } from "react";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { IProducts } from "../types/product.type";
import Image from "next/image";
import { useRouter } from "next/router";

export async function getServerSideProps() {
  const response = await fetch("https://dummyjson.com/products?limit=3");
  const json = await response.json();
  const data = json.products;
  return { props: { data } };
}

export default function Home(props: { data: IProducts[] }) {
  const { data: initialData } = props;
  const { push } = useRouter();
  const [data, setData] = useState(initialData);
  const [limit, setLimit] = useState(3);
  const [loading, setLoading] = useState(false);

  const loadMoreData = useCallback(async () => {
    console.log("loadMore");
    if (!loading) {
      setLoading(true);
      const response = await fetch(
        `https://dummyjson.com/products?limit=${limit + 3}`
      );
      const json = await response.json();
      const newData = json.products;
      setData(newData);
      setLimit(limit + 3);
      setLoading(false);
    }
  }, [loading, limit]);

  useEffect(() => {
    const handleScroll = () => {
      if (
        window.innerHeight + document.documentElement.scrollTop >=
        document.documentElement.offsetHeight -1
      ) {
        loadMoreData();
      }
    };

    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, [loadMoreData]);

  const renderImages = (images: any) => {
    return images.map((image: any) => (
      <Image
        key={image}
        priority={true}
        width={200}
        height={100}
        src={image}
        alt={image}
      />
    ));
  };

  const handleClick = (id: number) => {
    push(`/${id}`);
  };

  return (
    <>
      <Head>
        <title>Fabrotech FE-TEST</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h2>Scroll to bottom and the items will be updated</h2>
        {data.map((item) => (
          <div
            className={styles.card}
            key={item.id}
            onClick={() => handleClick(item.id)}
          >
            <h1 className={styles.cardTitle}>{item.title}</h1>
            <div className={styles.cardContent}>
              <Image
                priority={true}
                width={400}
                height={200}
                src={item.thumbnail}
                alt={item.title}
              />
              <ul>
                <li>Description : {item.description}</li>
                <li>Price : {item.price}</li>
                <li>Discount : {item.discountPercentage} %</li>
                <li>Rating : {item.rating}</li>
                <li>Stock : {item.stock}</li>
              </ul>
            </div>
            <div className={styles.cardImages}>{renderImages(item.images)}</div>
          </div>
        ))}

        {loading && <p>Loading...</p>}
      </main>
    </>
  );
}
